import javax.swing.*;
import java.awt.*;
import java.util.concurrent.TimeUnit;

public class TicTacToeView {
    TicTacToeModel model;
    Cell[] cell;
    boolean comp = false;

    public TicTacToeView(TicTacToeModel model) {

        this.model = model;

        SwingUtilities.invokeLater(
                new Runnable() {

                    @Override
                    public void run() {

                        JPanel mainPanel = new JPanel();
                        mainPanel.setLayout(new GridLayout(3, 3));

                        cell = new Cell[9];

                        // Instantiate tiles and add to main panel
                        for (int i = 0; i < cell.length; i++) {
                            // Create my tile objects
                            cell[i] = new Cell(TicTacToeView.this, i);

                            // Add this tile to the main panel
                            mainPanel.add(cell[i].getLabel());

                        }

                        model.initBoard();
                        // updateDisplay();

                        JFrame mainFrame = new JFrame();
                        mainFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                        mainFrame.getContentPane().add(mainPanel);
                        mainFrame.pack();
                        mainFrame.setVisible(true);
                    }
                });
    }

    void cellClicked(int cellNumber) {
        System.out.println(cellNumber);
        int doClick = model.doClick(cellNumber);
        boolean userWin = turn(doClick, cellNumber);
        if (comp && !userWin) {
            computer();
        }
        // doClick returns true for X, false for O
    }

    void computer() {
        int[] data = model.computerTurn();
        turn(data[0], data[1]);
    }

    boolean turn(int doClick, int cellNumber) {
        if (doClick >= 0) {
            String player;
            if (doClick > 0) {
                player = "X";
            } else {
                player = "O";
            }
            cell[cellNumber].getLabel().setText(player);
            boolean win = model.checkForWin();
            if (win) {
                JOptionPane.showMessageDialog(null, "Player " + player + " wins!");
                clear();
                return true;
            } else if (model.turn >= 9) {
                JOptionPane.showMessageDialog(null, "You both lose!!");
                clear();
                return true;
            }
        }
        return false;
        //TimeUnit.SECONDS.sleep(1);

    }

    void clear() {
        model.clear();
        for (int i = 0; i < cell.length; i++) {
            // Create my tile objects
            cell[i].getLabel().setText("");

        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }
}
